name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cms
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5433/cms?schema=public
      PORT: 3000
      CI: true
      ADMIN_EMAIL: admin@example.com
      ADMIN_PASSWORD: admin123
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Wait for PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          for i in {1..60}; do
            if pg_isready -h localhost -p 5433 -U postgres; then echo "Postgres listo"; break; fi; sleep 2;
          done

      - name: Prisma migrate deploy
        run: npx prisma migrate deploy --schema=prisma/schema.prisma

      - name: Prisma db seed
        run: npx prisma db seed --schema=prisma/schema.prisma

      - name: Generate OpenAPI types
        run: npm run openapi:all

      - name: Lint
        run: npx nx run-many -t lint --all

      - name: Unit Tests
        run: npx nx run-many -t test --all --coverage

      - name: Build Backend
        run: npx nx build backend

      - name: Build Frontend
        run: npx nx build frontend

      - name: Backend E2E (smoke)
        run: npx nx e2e backend-e2e --ci --runInBand

      - name: Frontend E2E (smoke)
        env:
          API_URL: http://localhost:3000/api
        run: npx nx e2e frontend-e2e --ci

      - name: Archive dist
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
          if-no-files-found: warn

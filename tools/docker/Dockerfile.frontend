FROM node:20.19.0-alpine AS builder
WORKDIR /workspace
# Copiar package.json y lock para instalar deps
COPY package*.json ./
# Copiar prisma antes de npm ci para que postinstall (prisma generate) encuentre el schema
COPY prisma ./prisma
RUN npm ci --no-audit --no-fund --legacy-peer-deps
# Copiar el resto del código
COPY . .
# Construir el frontend con Nx (SSR)
RUN npm run build:frontend
# Reducir a dependencias de producción
RUN npm prune --omit=dev

FROM node:20.19.0-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production
# Dependencia para healthcheck
RUN apk add --no-cache curl
# Copiar artefactos de build y node_modules pruned
COPY --from=builder /workspace/dist/frontend /app/dist/frontend
COPY --from=builder /workspace/node_modules /app/node_modules
COPY --from=builder /workspace/package.json /app/
EXPOSE 4000
HEALTHCHECK --interval=10s --timeout=5s --retries=12 CMD curl -f http://localhost:4000/ || exit 1
USER node
CMD ["node","/app/dist/frontend/server/server.mjs"]

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  slug      String   @unique
  bio       String?
  avatarUrl String?
  posts     Post[]
  pages     Page[]
  passwordHash String
  roles        String[] @default([])
  adminLastLogin DateTime?
  failedAttempts Int      @default(0)
  lockedUntil    DateTime?
  auditLogs      AuditLog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([slug])
}

model Category {
  id        String      @id @default(cuid())
  name      String
  slug      String      @unique
  parent    Category?   @relation("CategoryToCategory", fields: [parentId], references: [id])
  parentId  String?
  children  Category[]  @relation("CategoryToCategory")
  posts     PostCategory[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  @@index([slug])
}

model Tag {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  posts     PostTag[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([slug])
}

model Post {
  id           String         @id @default(cuid())
  title        String
  slug         String         @unique
  excerpt      String?
  content      String
  status       PostStatus     @default(DRAFT)
  author       User           @relation(fields: [authorId], references: [id])
  authorId     String
  readingTime  Int
  viewCount    Int            @default(0)
  publishedAt  DateTime?
  lastEditedBy String?
  lastEditedAt DateTime?
  version      Int            @default(1)
  featuredImage String?
  categories   PostCategory[]
  tags         PostTag[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  @@index([slug])
  @@index([status])
}

model AuditLog {
  id         String   @id @default(cuid())
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?
  action     String
  resource   String
  resourceId String
  createdAt  DateTime @default(now())
}

model PostCategory {
  post       Post     @relation(fields: [postId], references: [id])
  postId     String
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  @@id([postId, categoryId])
}

model PostTag {
  post   Post @relation(fields: [postId], references: [id])
  postId String
  tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  String
  @@id([postId, tagId])
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model Page {
  id             String      @id @default(cuid())
  title          String
  slug           String      @unique
  content        String
  excerpt        String?
  status         PageStatus  @default(DRAFT)
  isHomepage     Boolean     @default(false)
  seoTitle       String?
  seoDescription String?
  seoKeywords    String?
  featuredImage  String?
  author         User        @relation(fields: [authorId], references: [id])
  authorId       String
  sortOrder      Int         @default(0)
  templateId     String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  @@index([slug])
  @@index([isHomepage])
}

model MenuItem {
  id            String       @id @default(cuid())
  title         String
  url           String?
  type          MenuItemType
  targetId      String?
  parent        MenuItem?    @relation("MenuItemParent", fields: [parentId], references: [id])
  parentId      String?
  children      MenuItem[]   @relation("MenuItemParent")
  sortOrder     Int          @default(0)
  isVisible     Boolean      @default(true)
  openNewWindow Boolean      @default(false)
  slug          String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  @@index([type])
  @@index([parentId])
  @@unique([parentId, slug])
}

model ThemeSettings {
  id              String   @id @default(cuid())
  name            String
  isActive        Boolean  @default(false)

  // Color System - Extended palette for visual customization
  primaryColor    String   @default("#2563eb")      // Blue as default (vs old yellow)
  secondaryColor  String   @default("#64748b")      // Slate gray
  accentColor     String   @default("#f59e0b")      // Amber accent
  surfaceColor    String   @default("#ffffff")      // Background surfaces
  surfaceAltColor String   @default("#f8fafc")      // Alternate surfaces
  textColor       String   @default("#1e293b")      // Primary text
  textSecondary   String   @default("#64748b")      // Secondary text
  borderColor     String   @default("#e2e8f0")      // Border color
  errorColor      String   @default("#dc2626")      // Error/danger
  successColor    String   @default("#16a34a")      // Success
  warningColor    String   @default("#d97706")      // Warning

  // Typography System
  fontHeading     String   @default("Inter")        // Google Font for headings
  fontBody        String   @default("Inter")        // Google Font for body
  fontSizeBase    String   @default("16px")         // Base font size
  fontScaleRatio  Float    @default(1.25)          // Type scale ratio
  lineHeightBase  Float    @default(1.6)           // Base line height
  letterSpacing   String   @default("normal")       // Letter spacing

  // Layout System
  containerWidth  String      @default("1200px")       // Max container width
  spacingUnit     String      @default("1rem")         // Base spacing unit
  borderRadius    String      @default("8px")          // Base border radius
  borderWidth     String      @default("1px")          // Base border width
  headerStyle     HeaderStyle @default(DEFAULT)        // Header layout style
  footerStyle     FooterStyle @default(DEFAULT)        // Footer layout style

  // Component Styling
  buttonStyle     ButtonStyle @default(ROUNDED)        // Button style variant
  cardStyle       CardStyle   @default(ELEVATED)       // Card style variant
  formStyle       String      @default("modern")       // Form input style
  navigationStyle String      @default("horizontal")   // Navigation style

  // Advanced Settings
  shadowStyle     ShadowStyle @default(SOFT)           // Shadow style preference
  animationSpeed  String   @default("300ms")        // Animation duration
  customCss       String?                           // Custom CSS overrides
  templatePath    String?                           // Template path (legacy)
  settings        Json?                             // Additional JSON settings

  // Theme Metadata
  description     String?                           // Theme description
  category        ThemeCategory @default(GENERAL)   // Theme category (business, blog, portfolio, etc.)
  previewImage    String?                           // Preview screenshot URL
  version         String   @default("1.0.0")       // Theme version

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([isActive])
  @@index([category])
}

model SiteSettings {
  id              String   @id @default("default")
  siteName        String   @default("CMS")
  tagline         String?
  defaultMetaDesc String?  @map("default_meta_desc")
  logoUrl         String?
  faviconUrl      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model BlogConfig {
  id               String   @id @default(cuid())
  // Identidad básica
  blogName         String   @db.VarChar(100)
  description      String?  @db.VarChar(255)
  siteUrl          String?  @db.VarChar(255)

  // Assets visuales
  logoLight        String?  @db.Text
  logoDark         String?  @db.Text
  favicon          String?  @db.Text
  defaultPostImage String?  @db.Text

  // SEO
  metaDescription  String?  @db.VarChar(160)
  keywords         String?  @db.Text
  analyticsId      String?  @db.VarChar(50)
  searchConsoleCode String? @db.Text
  ogImage          String?  @db.Text

  // Contacto
  contactEmail     String?  @db.VarChar(100)
  socialTwitter    String?  @db.VarChar(255)
  socialLinkedIn   String?  @db.VarChar(255)
  socialGithub     String?  @db.VarChar(255)
  socialInstagram  String?  @db.VarChar(255)

  // Configuración técnica
  locale           String   @default("es-ES") @db.VarChar(10)
  timezone         String   @default("Europe/Madrid") @db.VarChar(50)
  postsPerPage     Int      @default(10)
  enableComments   Boolean  @default(true)

  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@map("blog_config")
}

enum PageStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum MenuItemType {
  PAGE
  POST
  BLOG_INDEX
  CATEGORY
  EXTERNAL_LINK
}

enum ThemeCategory {
  GENERAL
  BUSINESS
  BLOG
  PORTFOLIO
  ECOMMERCE
  LANDING
  CREATIVE
  MINIMALIST
}

enum HeaderStyle {
  DEFAULT
  CENTERED
  SPLIT
  MINIMAL
  STICKY
  TRANSPARENT
}

enum FooterStyle {
  DEFAULT
  MINIMAL
  COLUMNS
  CENTERED
  SOCIAL_FOCUSED
}

enum ButtonStyle {
  ROUNDED
  SQUARE
  PILL
  OUTLINED
  GHOST
  GRADIENT
}

enum CardStyle {
  ELEVATED
  FLAT
  OUTLINED
  MINIMAL
  GLASS
}

enum ShadowStyle {
  NONE
  SOFT
  MEDIUM
  STRONG
  COLORED
}

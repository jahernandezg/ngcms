# Nginx config for api.tsinit.com (HTTPS, reverse proxy to backend on 127.0.0.1:3000)

# HTTP → HTTPS redirect
server {
  listen 80;
  server_name api.tsinit.com;
  return 301 https://$host$request_uri;
}

# WebSocket upgrade helper (move to /etc/nginx/conf.d/websocket.conf if you prefer)
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# HTTPS server
server {
  listen 443 ssl http2;
  server_name api.tsinit.com;

  # Let’s Encrypt files (set by certbot --nginx)
  ssl_certificate     /etc/letsencrypt/live/api.tsinit.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.tsinit.com/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  # Security headers (basic)
  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options SAMEORIGIN;
  add_header Referrer-Policy strict-origin-when-cross-origin;
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # enable after validation

  # Upload size (adjust as needed)
  client_max_body_size 25m;

  # Gzip basic
  gzip on;
  gzip_types application/json text/plain text/css application/javascript;

  # Proxy to backend
  location / {
    proxy_pass http://127.0.0.1:3000;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # WebSocket support
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_connect_timeout 5s;
    proxy_read_timeout 60s;
  }

  # Cache for static uploads served by backend
  location /uploads/ {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000";
  }
}
